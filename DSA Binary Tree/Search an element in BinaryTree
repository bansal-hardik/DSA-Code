// Recusrion
public static boolean findinBT(BiinaryTree root, int data){
  if(root == null)
    return false;
   if(root.data == data)
    return true;
   return findinBT(root.left,data) || findinBT(root.right,data);
}

// O(n)

// Iteration
public static boolean findinBT(BiinaryTree root, int data){
  if(root == null)
    return false;
  Queue<BinaryTreeNode> q = new LinkedList<BinaryTreeNode>();
  q.offer(root);
  while(!q.isEmpty()){
    BinaryTreeNode tmp = q.poll();
    if(tmp.data == data){
      return true;
    }
    if(tmp != null){
      if(tmp.left != null)
        q.offer(tmp.left);
      if(tmp.right != null)
        q.offer(tmp.right);
    }
  }
  return false;
}
